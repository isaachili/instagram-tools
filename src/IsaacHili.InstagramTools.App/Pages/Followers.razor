@inject IConnectionsService connectionsService

@page "/"

@using IsaacHili.InstagramTools.App.Shared
@using IsaacHili.InstagramTools.Followers.Abstractions.Services
@using System.Diagnostics

@* Followers and Following *@
<section>

	<h2>Connections</h2>

	@* File Input *@
	<InputFile OnChange="LoadFileAsync" accept=".zip" autofocus
		class="p-1.5 bg-slate-50 bg-opacity-25 text-midnight rounded-full w-full max-w-full
			cursor-pointer outline-none
			file:bg-midnight file:text-slate-50 file:font-mono file:mr-2 file:px-4
			file:rounded-full file:border-none file:cursor-pointer
			hover:bg-opacity-50
			focus:bg-opacity-50 focus:bg-midnight focus:text-slate-50
			file:focus:text-mustard" />

	@if (IsFileLoaded)
	{
		<h3>Accounts That Don't Follow You Back</h3>

		@* Not Followed *@
		<AccountConnections Connections="connectionsService.NotFollowed"
			FollowDate="connection => connection.DateFollowing"></AccountConnections>

		@* Accounts That You Don't Follow Back *@
		<details>

			@* Title *@
			<summary>Accounts That You Don't Follow Back</summary>

			@* Not Following *@
			<AccountConnections Connections="connectionsService.NotFollowing"
				FollowDate="connection => connection.DateFollowed"></AccountConnections>

		</details>

		@* Accounts That Follow You Back *@
		<details>

			@* Title *@
			<summary>Accounts That Follow You Back</summary>

			@* Mutual Followers *@
			<ul>
				@foreach (var follower in connectionsService.Mutual)
				{
					<li>
						<a href="@follower.ProfileUri" target="_blank">@@@follower.Username</a>
					</li>
				}
			</ul>
			
		</details>
	}

</section>

@code {

	private bool IsFileLoaded { get; set; }

	private async Task LoadFileAsync(InputFileChangeEventArgs e)
	{
		string extension = Path.GetExtension(e.File.Name);

		if (extension != ".zip")
		{
			return;
		}

		// Copy archive to memory stream
		using var stream = new MemoryStream();
		await e.File.OpenReadStream().CopyToAsync(stream);

		// Read memory stream
		await connectionsService.LoadConnectionsAsync(stream);

		IsFileLoaded = true;
	}
}
